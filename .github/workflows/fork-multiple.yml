# -------------------------------------------------------------
# "Forks" code from a public repo into a private repository to exercise all internal security controls
#
# Required GitHub Token Permissions for this workflow:
#
# For the secret used as GH_TOKEN, ensure the following scopes:
#
# 1. Administration (Read and write)
# 2. Metadata (Read-only)
# 3. Custom properties (Read and write)
#
# If using an organization-level token, ensure the token has:
# - Custom properties permission for the organization
#
# These permissions are required to allow the workflow to create forks
# in the organization and manage repository properties.
# -------------------------------------------------------------
name: Fork Repo
permissions: {}


on:
  workflow_dispatch:
    inputs:
      num_forks:
        description: 'Number of forks to create'
        required: true
        default: '1'
      name_prefix:
        description: 'Prefix for fork names'
        required: false
        default: 'WebGoat'
      org:
        description: 'Target organization for forks'
        required: true
        default: 'Forrester-Wave-Demo-Q3-2025'
      nwo:
        description: 'Repository org/repo to fork'
        required: false
        default: 'Forrester-Wave-Demo-Q3-2025/WebGoat'

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        shell: pwsh
        run: |
          $numForks = [int]('${{ github.event.inputs.num_forks }}')
          $matrix = @{ fork = @() }
          for ($i = 1; $i -le $numForks; $i++) {
            $suffix = $i.ToString('000')
            $matrix.fork += $suffix
          }
          $jsonMatrix = ConvertTo-Json -Compress $matrix
          echo "matrix=$jsonMatrix" >> $env:GITHUB_OUTPUT

  fork-repo:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Run PowerShell to clone and push to repo
        shell: pwsh
        env:
          GH_TOKEN: ${{ secrets.FORK_TOKEN }}
        run: |
          $suffix = '${{ matrix.fork }}'
          $prefix = '${{ github.event.inputs.name_prefix }}'
          $org = '${{ github.event.inputs.org }}'
          $nwo = '${{ github.event.inputs.nwo }}'
          $forkName = "$prefix-$suffix"
          
          # Extract just the repository name from the full repo path (org/repo)
          $repoName = $nwo.Split('/')[-1]
          
          git clone --bare "https://github.com/$nwo.git"
          cd "${repoName}.git"
          
          # Create a new empty INTERNAL repository
          echo "Creating new repo: $org/$forkName"
          gh repo create "$org/$forkName" --internal
          
          # Push to the repository
          echo "Pushing to $org/$forkName"
          git push --mirror "https://$env:GH_TOKEN@github.com/$org/$forkName.git"
          
          # Private Forking properties
          echo "Setting default branch/description/url for $org/$forkName"
          $repoInfo = gh repo view $nwo --json description,homepageUrl,defaultBranchRef | ConvertFrom-Json
          gh repo edit "$org/$forkName" --description "$($repoInfo.description)" --homepage "$($repoInfo.homepageUrl)" --default-branch "$($repoInfo.defaultBranchRef.name)"
          
          # Set custom property 'repo-type' to 'synthetic' - will fail if not available
          echo "Setting custom property 'repo-type' to 'synthetic' for $org/$forkName"
          gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" "/repos/$org/$forkName/properties/values" -f "properties[][property_name]=repo-type" -f "properties[][value][]=synthetic"
